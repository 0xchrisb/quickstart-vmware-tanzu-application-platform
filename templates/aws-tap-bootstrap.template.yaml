AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template is a child template to both the aws-tap-entrypoint.newvpc and
  aws-tap-entrypoint.existingvpc templates with all parameters being passed
  from those parent templates. This template will focus on the creation of an
  EC2 instance that can be used to Bootstrap the install and configure TAP. The
  EC2 instance will contain a large script that will install all of the CLI
  components necessary and then perform all of the installation steps as
  defined within the TAP Installation guide for deploying into AWS. It will
  also make sure that all of the images used for TAP are stored within ECR.
  (qs-1t1t2pssu)
Metadata:
  SentenceCaseExclude:
    - Bootstrap
    - Net
    - Tanzu
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC network configuration
        Parameters:
          - VpcId
          - SubnetId
      - Label:
          default: Bootstrap EC2 instance configuration
        Parameters:
          - OS
          - KeyPairName
          - SshPort
          - IngressCidr
          - EgressFromPort
          - EgressToPort
          - EgressCidr
      - Label:
          default: VMware Tanzu Net authentication configuration
        Parameters:
          - TanzuNetUsername
          - TanzuNetPassword
          - TanzuNetApiToken
      - Label:
          default: Amazon EKS configuration
        Parameters:
          - EKSClusterName
          - ControlPlaneSecurityGroupId
          - NodeGroupSecurityGroupId
      - Label:
          default: AWS Quick Start S3 bucket configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
    ParameterLabels:
      VpcId:
        default: VPC ID
      SubnetId:
        default: Subnet ID
      OS:
        default: OS
      KeyPairName:
        default: SSH key name
      SshPort:
        default: SSH port
      IngressCidr:
        default: Ingress CIDR
      EgressFromPort:
        default: Egress from port
      EgressToPort:
        default: Egress to port
      EgressCidr:
        default: Egress CIDR
      TanzuNetUsername:
        default: Username
      TanzuNetPassword:
        default: Password
      TanzuNetApiToken:
        default: API token
      EKSClusterName:
        default: Cluster name
      ControlPlaneSecurityGroupId:
        default: Control plane security group ID
      NodeGroupSecurityGroupId:
        default: Node security group ID
      QSS3BucketName:
        default: Name
      QSS3BucketRegion:
        default: Region
      QSS3KeyPrefix:
        default: Key prefix
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID for the Bootstrap instance.
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet ID to which the Bootstrap instance will be connected.
  OS:
    Type: String
    Description: >-
      Preferred operating system for the Bootstrap EC2 instance based on
      available values.
    AllowedValues:
      - Ubuntu-Server-22.04-LTS-HVM
    Default: Ubuntu-Server-22.04-LTS-HVM
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: >-
      The name of the SSH key that will be used to access the Bootstrap
      instance when it is created.
  EgressFromPort:
    Type: Number
    Description: >-
      Start of port range for outbound access of the Bootstrap VM (default 0).
    Default: 0
  EgressToPort:
    Type: Number
    Description: >-
      End of port range for outbound access of the Bootstrap VM
      (default 65535).
    Default: 65535
  EgressCidr:
    Type: String
    Description: >-
      IP range for outbound access of the Bootstrap VM
      (default is full and open to guarantee installation success).
    Default: 0.0.0.0/0
  SshPort:
    Type: Number
    Description: >-
      Port number to be used for SSH connectivity to the Bootstrap VM.
    MinValue: 0
    MaxValue: 65535
    Default: 22
  IngressCidr:
    Type: String
    Description: >-
      CIDR block that is permitted inbound SSH connectivity to the Bootstrap
      instance.
  TanzuNetUsername:
    Type: String
    Description: >-
      The VMware Tanzu Net username (authentication ID or email address).
    NoEcho: true
  TanzuNetPassword:
    Type: String
    Description: The VMware Tanzu Net password (authentication key).
    NoEcho: true
  TanzuNetApiToken:
    Type: String
    Description: The VMware Tanzu Net API token.
    NoEcho: true
  EKSClusterName:
    Type: String
    Description: >-
      The name of the cluster that will be created to contain the TAP
      deployment.
    MinLength: 1
    MaxLength: 100
    AllowedPattern: ^[0-9A-Za-z][A-Za-z0-9\-_]*
    ConstraintDescription: >-
      Minimum length of 1. Maximum length of 100. Must start with a letter or
      number.
  ControlPlaneSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: >-
      The EKS cluster's control plane security group ID.
  NodeGroupSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: >-
      The EKS cluster's node group security group ID.
  QSS3BucketName:
    Type: String
    Description: >-
      Name of the S3 bucket for your copy of the Quick Start assets.
      Keep the default name unless you are customizing the template.
      Changing the name updates code references to point to a new Quick
      Start location. This name can include numbers, lowercase letters,
      uppercase letters, and hyphens, but do not start or end with a hyphen (-).
      See https://aws-quickstart.github.io/option1.html.
    MinLength: 3
    MaxLength: 63
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: >-
      The Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a
      hyphen (-).
    Default: aws-quickstart
  QSS3KeyPrefix:
    Type: String
    Description: >-
      S3 key prefix that is used to simulate a directory for your copy of the
      Quick Start assets. Keep the default prefix unless you are customizing
      the template. Changing this prefix updates code references to point to
      a new Quick Start location. This prefix can include numbers, lowercase
      letters, uppercase letters, hyphens (-), and forward slashes (/). End
      with a forward slash.
      See https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html
      and https://aws-quickstart.github.io/option1.html.
    AllowedPattern: ^([0-9a-zA-Z-.]+/)*$
    ConstraintDescription:
      The Quick Start S3 key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slashes (/).
    Default: quickstart-vmware-tanzu-application-platform/
  QSS3BucketRegion:
    Type: String
    Description: >-
      AWS Region where the Quick Start S3 bucket (QSS3BucketName) is
      hosted. Keep the default Region unless you are customizing the template.
      Changing this Region updates code references to point to a new
      Quick Start location. When using your own bucket, specify the Region.
      See https://aws-quickstart.github.io/option1.html.
    Default: us-east-1
Mappings:
  AwsAmiRegionMap:
    # Ubuntu Server lookup: https://cloud-images.ubuntu.com/locator/ec2/
    af-south-1:
      US2204HVM: ami-08a1ff0efd6690ede
    ap-east-1:
      US2204HVM: ami-0c5b035581d9859b0
    ap-northeast-1:
      US2204HVM: ami-055bb115702a738f5
    ap-northeast-2:
      US2204HVM: ami-05b9c9c0fe2f5a62c
    ap-northeast-3:
      US2204HVM: ami-0b3874967694fae86
    ap-south-1:
      US2204HVM: ami-00d095fb90db2fa00
    ap-southeast-1:
      US2204HVM: ami-00c76c78e78a3dcd4
    ap-southeast-2:
      US2204HVM: ami-0251cb389d14767a2
    ap-southeast-3:
      US2204HVM: ami-0de46ab389596d621
    ca-central-1:
      US2204HVM: ami-0204f3c59456ea9a1
    # cn-north-1:
    #   US2204HVM:
    # cn-northwest-1:
    #   US2204HVM:
    eu-central-1:
      US2204HVM: ami-04aa66cdfe687d427
    eu-north-1:
      US2204HVM: ami-0dbac3c76b4ead6c5
    eu-south-1:
      US2204HVM: ami-0fe7a5523599f4c08
    eu-west-1:
      US2204HVM: ami-07bd2fc45c8a8dd48
    eu-west-2:
      US2204HVM: ami-033c8ef001424a6d3
    eu-west-3:
      US2204HVM: ami-00e43f192e8c59874
    me-south-1:
      US2204HVM: ami-0d49942d3daf970df
    sa-east-1:
      US2204HVM: ami-0b54d646bcf381a79
    us-east-1:
      US2204HVM: ami-09db26f1ef0a9f406
    us-east-2:
      US2204HVM: ami-07a683b72d6bd7da3
    us-gov-east-1:
      US2204HVM: ami-08fcbec75b43330b7
    us-gov-west-1:
      US2204HVM: ami-04e77113f128920b2
    us-west-1:
      US2204HVM: ami-09596c63850a1bd49
    us-west-2:
      US2204HVM: ami-0437ae8a23be4e98b
  LinuxAmiNameMap:
    Ubuntu-Server-22.04-LTS-HVM:
      Code: US2204HVM
      OS: Ubuntu
Conditions:
  Ubuntu: !Equals [!FindInMap [LinuxAmiNameMap, !Ref OS, OS], Ubuntu]
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, aws-quickstart]
Resources:
  BootstrapSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enables SSH access to the Bootstrap instance
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: TAPBootstrapSecurityGroup
        - Key: Description
          Value: >-
            VMware Tanzu Application Platform EKS cluster bootstrap security
            group.
  BootstrapSshIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow SSH to Bootstrap instance
      GroupId: !Ref BootstrapSecurityGroup
      IpProtocol: tcp
      FromPort: !Ref SshPort
      ToPort: !Ref SshPort
      CidrIp: !Ref IngressCidr
  BootstrapDefaultEgressRule:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Bootstrap instance egress
      GroupId: !Ref BootstrapSecurityGroup
      IpProtocol: tcp
      FromPort: !Ref EgressFromPort
      ToPort: !Ref EgressToPort
      CidrIp: !Ref EgressCidr
  BootstrapSshToNodesEgressRule:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow SSH from Bootstrap instance to EKS nodes
      GroupId: !Ref BootstrapSecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      DestinationSecurityGroupId: !Ref NodeGroupSecurityGroupId
  NodesSshIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow SSH from Bootstrap instance to EKS nodes
      GroupId: !Ref NodeGroupSecurityGroupId
      IpProtocol: tcp
      ToPort: 22
      FromPort: 22
      SourceSecurityGroupId: !Ref BootstrapSecurityGroup
  BootstrapK8sToApiEgressRule:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: >-
        Allow Kubernetes API traffic from Bootstrap instance to EKS control
        plane
      GroupId: !Ref BootstrapSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      DestinationSecurityGroupId: !Ref ControlPlaneSecurityGroupId
  EKSControlPlaneApiIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: >-
        Allow Kubernetes API traffic from Bootstrap instance to EKS control
        plane
      GroupId: !Ref ControlPlaneSecurityGroupId
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      SourceSecurityGroupId: !Ref BootstrapSecurityGroup
  BootstrapEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: TAPBootstrapEIP
  BootstrapRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: TAPBootstrapInstanceRole
      Description: >-
        VMware Tanzu Application Platform EKS cluster bootstrap instance
        IAM Role.
      Path: /VMwareTanzuApplicationPlatformQuickStart/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub ec2.${AWS::URLSuffix}
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BootstrapInstanceConfig
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: ListAllEksClusters
                Effect: Allow
                Action: eks:ListClusters
                Resource: !Sub arn:${AWS::Partition}:eks:${AWS::Region}:${AWS::AccountId}:cluster/*
              - Sid: ManageTapEksCluster
                Effect: Allow
                Action:
                  - eks:ListAddons
                  - eks:ListFargateProfiles
                  - eks:ListIdentityProviderConfigs
                  - eks:ListNodegroups
                  - eks:ListUpdates
                  - eks:AccessKubernetesApi
                  - eks:DescribeAddonVersions
                  - eks:DescribeCluster
                  - eks:DescribeNodegroup
                Resource: !Sub arn:${AWS::Partition}:eks:${AWS::Region}:${AWS::AccountId}:cluster/${EKSClusterName}
              - Sid: DescribeEksAddons
                Effect: Allow
                Action:
                  - eks:DescribeAddon
                Resource: !Sub arn:${AWS::Partition}:eks:${AWS::Region}:${AWS::AccountId}:addon/*/*/*
              - Sid: ManageTapEcrRepos
                Effect: Allow
                Action:
                  - ecr:DescribeImages
                  - ecr:ListImages
                  - ecr:BatchCheckLayerAvailability
                  - ecr:BatchGetImage
                  - ecr:DescribeRepositories
                  - ecr:GetDownloadUrlForLayer
                  - ecr:CompleteLayerUpload
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                Resource:
                  - !ImportValue qs-1t1t2pssn:TAPPackagesRepoArn
                  - !ImportValue qs-1t1t2pssn:TAPClusterEssentialsBundleRepoArn
                  - !ImportValue qs-1t1t2pssn:TAPBuildServiceRepoArn
                  - !ImportValue qs-1t1t2pssn:TAPSupplyChainRepoArn
                  - !ImportValue qs-1t1t2pssn:TAPWorkloadRepoArn
                  - !ImportValue qs-1t1t2pssn:TAPWorkloadBundleRepoArn
              - Sid: DescribeEcrPrivateRegistryAndGetAuthToken
                Effect: Allow
                Action:
                  - ecr:DescribeRegistry
                  - ecr:GetAuthorizationToken
                Resource: '*'
              - Sid: ListIamRoles
                Effect: Allow
                Action: iam:ListRoles
                Resource: '*'
              - Sid: ManageTapSecrets
                Effect: Allow
                Action:
                  - secretsmanager:DescribeSecret
                  - secretsmanager:GetResourcePolicy
                  - secretsmanager:GetSecretValue
                  - secretsmanager:ListSecretVersionIds
                  - secretsmanager:PutSecretValue
                Resource:
                  - !ImportValue qs-1t1t2pssn:TanzuNetSecretCredentialsArn
                  - !ImportValue qs-1t1t2pssn:TanzuNetSecretApiTokenArn
              - Sid: ListSecretsAndGetRandomPassword
                Effect: Allow
                Action:
                  - secretsmanager:GetRandomPassword
                  - secretsmanager:ListSecrets
                Resource: '*'
              - Sid: ListRoute53HostedZones
                Effect: Allow
                Action:
                  - route53:ListHostedZones
                  - route53:ListHostedZonesByName
                Resource: '*'
              - Sid: ManageTapRoute53HostedZoneRecordSets
                Effect: Allow
                Action:
                  - route53:ListResourceRecordSets
                  - route53:ChangeResourceRecordSets
                Resource: !Sub
                  - arn:${AWS::Partition}:route53:::hostedzone/${PrivateHostedZoneId}
                  - PrivateHostedZoneId: !ImportValue qs-1t1t2pssn:PrivateHostedZoneId
              - Sid: ManageCloudWatchLogs
                Effect: Allow
                Action:
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:GetLogEvents
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:PutMetricFilter
                  - logs:PutRetentionPolicy
                Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*
              - Sid: ManageTapS3ConfigBucketObjects
                Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:PutObject
                Resource: !ImportValue qs-1t1t2pssn:S3BucketArn
              - Sid: GetQSS3BucketObjects
                Effect: Allow
                Action: s3:GetObject
                Resource: !Sub
                  - arn:${AWS::Partition}:s3:::${S3Bucket}/${QSS3KeyPrefix}*
                  - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
              - Sid: ListAllS3Buckets
                Effect: Allow
                Action: s3:ListAllMyBuckets
                Resource: !Sub arn:${AWS::Partition}:s3:::*
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
        - !Sub arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy
  BootstrapInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: TAPBootstrapInstanceProfile
      Path: /VMwareTanzuApplicationPlatformQuickStart/
      Roles:
        - !Ref BootstrapRole
  BootstrapUbuntuInstance:
    Type: AWS::EC2::Instance
    Condition: Ubuntu
    Properties:
      InstanceType: m5.large
      IamInstanceProfile: !Ref BootstrapInstanceProfile
      ImageId: !FindInMap
        - AwsAmiRegionMap
        - !Ref AWS::Region
        - !FindInMap [LinuxAmiNameMap, !Ref OS, Code]
      KeyName: !Ref KeyPairName
      Monitoring: true
      SecurityGroupIds:
        - !Ref BootstrapSecurityGroup
      SubnetId: !Ref SubnetId
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 50
            VolumeType: gp2
            Encrypted: true
      Tags:
        - Key: Name
          Value: TAPBootstrapInstance
        - Key: Description
          Value: >-
            VMware Tanzu Application Platform EKS cluster bootstrap instance.
      UserData:
        Fn::Base64: !Sub
          - |
            #!/bin/bash
            set -xe
            tap_dir=/opt/tap-setup-scripts
            user=ubuntu
            cat <<EOF >> /etc/environment
            AWS_REGION=${AWS::Region}
            AWS_DEFAULT_REGION=${AWS::Region}
            EOF
            set -a
            source /etc/environment
            echo "Updating & upgrading..."
            sudo apt-get -y update
            sudo apt-get -y upgrade
            echo "Installing dependencies..."
            sudo apt-get -y install amazon-ecr-credential-helper awscli ca-certificates curl git jq openssl perl sudo python3-pip uuid-runtime vim wget
            echo "Configuring AWS CLI..."
            mkdir .aws
            chmod 700 ~/.aws
            printf "[default]\nregion = ${AWS::Region}\n" > ~/.aws/config
            echo "Updating certificate authority certificates..."
            sudo update-ca-certificates
            echo "Installing kubectl..."
            pushd /tmp
            curl -o ./kubectl "https://amazon-eks.s3-us-west-2.amazonaws.com/$AWS_KUBECTL_VERSION/bin/linux/amd64/kubectl"
            curl -o ./kubectl.sha256 "https://s3.us-west-2.amazonaws.com/amazon-eks/$AWS_KUBECTL_VERSION/bin/linux/amd64/kubectl.sha256"
            openssl sha1 -sha256 ./kubectl
            chmod 755 ./kubectl
            sudo chown root:root ./kubectl
            sudo mv kubectl /usr/local/bin/
            popd
            echo "Installing Carvel imgpkg..."
            sudo bash -c "set -eo pipefail; wget -O- https://carvel.dev/install.sh | bash"
            sudo curl -sSL https://get.docker.com/ | sh
            echo "Installing Docker..."
            sudo groupadd docker || true
            sudo usermod -aG docker $USER || true
            echo "Configuring the SSH listening port..."
            sudo printf "Port ${SshPort}\n" > /etc/ssh/sshd_config.d/port.conf
            sudo systemctl status sshd.service
            echo "Cloning the VMware Tanzu Application Platform Quick Start project..."
            mkdir git
            pushd git
            git clone https://github.com/aws-quickstart/quickstart-vmware-tanzu-application-platform.git
            popd
          - AwsKubectlVersion: 1.22.6/2022-03-09
            PrivateHostedZoneId: !ImportValue qs-1t1t2pssn:PrivateHostedZoneId
  BootstrapUbuntuEipAssociation:
    Type: AWS::EC2::EIPAssociation
    Condition: Ubuntu
    Properties:
      InstanceId: !Ref BootstrapUbuntuInstance
      AllocationId: !GetAtt BootstrapEIP.AllocationId
