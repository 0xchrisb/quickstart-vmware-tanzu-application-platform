#@ load("@ytt:data", "data")
---
profile: full
ceip_policy_disclosed: true # Installation fails if this is set to 'false'
buildservice:
  kp_default_repository: #@ "{}/{}".format(data.values.ecr_registry_hostname, data.values.tbs_ecr_repository)
  kp_default_repository_username: #@ data.values.ecr_registry_username
  kp_default_repository_password: #@ data.values.ecr_registry_password
  tanzunet_username: #@ data.values.tanzunet.username
  tanzunet_password: #@ data.values.tanzunet.password
  enable_automatic_dependency_updates: false
  descriptor_name: full

supply_chain: testing_scanning

ootb_supply_chain_testing_scanning:
  registry:
    server: #@ data.values.ecr_registry_hostname
    repository: #@ data.values.workload.ootb_repo_prefix
  gitops:
    ssh_secret: ""

learningcenter:
  ingressDomain: #@ "learning-center.{}".format(data.values.aws.domain)

ootb_delivery_basic:
  service_account: default

tap_gui:
  ingressEnabled: true
  ingressDomain: #@ data.values.aws.domain
  service_type: ClusterIP # NodePort for distributions that don't support LoadBalancer
  app_config:
    supplyChain:
      enablePlugin: true
    auth:
      allowGuestAccess: true
    backend:
      baseUrl: #@ "http://tap-gui.{}".format(data.values.aws.domain)
      cors:
        origin: #@ "http://tap-gui.{}".format(data.values.aws.domain)
    app:
      baseUrl: #@ "http://tap-gui.{}".format(data.values.aws.domain)

metadata_store:
  app_service_type: LoadBalancer

contour:
  envoy:
    service:
      type: LoadBalancer

cnrs:
  domain_name: #@ "{}".format(data.values.aws.domain)

grype:
  namespace: #@ data.values.workload.namespace
  targetImagePullSecret: registry-credentials
